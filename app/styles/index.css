@import url("https://fonts.googleapis.com/css2?family=Recursive&display=swap");

:root {
  --bg-1: #f5f5f5;
  --bg-2: #fff;
  --text: #000;
  --border-color: #fff;
  --border: 0.25rem solid var(--border-color);
  --accent: rgb(0, 80, 255);
  --grey: grey;
  --space-1: 0.5rem;
  --space-2: 1rem;
  --space-3: 1.5rem;
  --space-4: 2rem;
  --radius: 0.25rem;
  --duration: 0.15s ease-in-out;
  --container: 60%;
  --header-height: 68px;
  --elevation-1: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  --elevation-2: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.075);
  --elevation-3: 0 0.5rem 1rem rgba(0, 0, 0, 0.075);
  --font-family: "Recursive", sans-serif;
  --warning: #fa5f55;
}

html {
  background-color: var(--bg-1);
  color: var(--text);
  font-family: var(--font-family);
  accent-color: var(--accent);
  font-size: x-large;
}

input[type="checkbox"] {
  transform: scale(1.3);
}

a {
  color: var(--accent);
}

fieldset {
  box-shadow: var(--elevation-1);
}

fieldset,
select,
input,
textarea {
  border: var(--bg-1);
  border-radius: var(--radius);
  background-color: var(--bg-2);
  padding: var(--space-1);
  color: var(--text);
  width: 100%;
  font: inherit;
}

input,
select {
  background-color: var(--bg-1);
}

fieldset:hover,
select:hover,
input:hover {
  border-color: var(--accent);
}

input:autofill {
  background-color: var(--bg-2);
  color: var(--text);
}

button[type="submit"],
input[type="checkbox"] {
  transition: transform var(--duration);
}

input[type="checkbox"]:hover {
  transform: scale(1.7);
  transition: transform var(--duration);
}

button[type="submit"]:hover,
button[type="submit"]:focus {
  transform: scale(1.01);
  transition: transform var(--duration);
}

/* loading */
fieldset:disabled {
  opacity: 0.8;
  animation: pulse 1s ease-in-out infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    box-shadow: var(--elevation-1);
  }

  25% {
    opacity: 0.7;
    transform: scale(1.01);
    box-shadow: var(--elevation-2);
  }

  50% {
    opacity: 0.6;
    transform: scale(1.02);
    box-shadow: var(--elevation-3);
  }

  70% {
    opacity: 0.7;
    transform: scale(1.01);
    box-shadow: var(--elevation-2);
  }

  100% {
    opacity: 0.8;
    transform: scale(1);
    box-shadow: var(--elevation-1);
  }
}

::-webkit-datetime-edit-fields-wrapper {
  background-color: var(--bg-2);
  border-radius: var(--radius);
  padding: var(--space-1);
  box-shadow: var(--elevation-3);
}

::-webkit-calendar-picker-indicator {
  background-color: var(--bg-2);
  border-radius: var(--radius);
  padding: var(--space-1);
  width: fill-available;
  border: var(--border);
}

::-webkit-calendar-picker-indicator:hover {
  border: var(--border);
  border-color: var(--accent);
  color: var(--bg-2);
  cursor: pointer;
}

button,
.linkButton {
  background-color: var(--accent);
  color: var(--bg-2);
  border: none;
  padding: var(--space-1) var(--space-2);
  border-radius: var(--radius);
  cursor: pointer;
  width: 100%;
  transition: background-color var(--duration);
  font: inherit;
  /* box-shadow: var(--elevation-3); */
}

button[data-secondary],
.linkButton {
  background-color: var(--bg-2);
  color: var(--accent);
  transition: background-color var(--duration) color var(--duration);
}

button[data-secondary]:hover {
  box-shadow: var(--elevation-1);
  transition: background-color var(--duration) color var(--duration) ease-in-out;
}

table {
  border-collapse: collapse;
  width: 100%;
}

table,
thead,
th,
td {
  border: var(--border);
  padding: var(--space-1);
}

th {
  text-align: initial;
}

@media (max-width: 768px) {
  :root {
    --container: 100%;
  }

  main {
    padding: var(--space-1);
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --bg-1: #000;
    --bg-2: #1a1a1a;
    --text: #fff;
    --border-color: #1a1a1a;
    --accent: palevioletred;
  }

  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    color-scheme: dark;
    font-family: var(--font-family);
  }
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}
